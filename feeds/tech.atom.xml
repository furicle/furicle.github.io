<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Are You Helping? - Tech</title><link href="https://www.furicle.org/" rel="alternate"></link><link href="https://www.furicle.org/feeds/tech.atom.xml" rel="self"></link><id>https://www.furicle.org/</id><updated>2025-01-12T17:37:14-05:00</updated><entry><title>Using pre-commit</title><link href="https://www.furicle.org/using-precommit.html" rel="alternate"></link><published>2025-01-12T17:37:14-05:00</published><updated>2025-01-12T17:37:14-05:00</updated><author><name>furicle</name></author><id>tag:www.furicle.org,2025-01-12:/using-precommit.html</id><summary type="html">&lt;p&gt;I've started using the pre-commit python tool with my repositories, and it's a easy way to add automated linting, locally.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have a bunch of small repositories I maintain, for scripts I use at work, or other bits and pieces, like the one for this blog.&lt;/p&gt;
&lt;p&gt;I'm not using github or other large repositories, they're stored on machines I control, and accessed via ssh and tailscale.  Simple, straight forward and reliable.&lt;/p&gt;
&lt;p&gt;Inkeeping with that simple and reliable theme, I'm not doing CI/CD pipelines, but I do have a few tasks I run using git's built in 'hooks'.__
For example, if I update a script I use on several different computers, a post-commit hook copies the latest version of the script to those machines, when I commit it.&lt;/p&gt;
&lt;p&gt;I like using linters to help me spot my missteps &lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; but don't always remember to run them.
Then I found &lt;a href="https://pre-commit.com/"&gt;precommit&lt;/a&gt;, and I'm quite enjoying it.&lt;/p&gt;
&lt;p&gt;The instructions on the site are good, but pretty developer focused.  They don't convey the magic of using it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install pre-commit.  It's a python thing, but before you run away screaming, try &lt;code&gt;pipx install pre-commit&lt;/code&gt;  Worked fine for me, even on Windows.  If you don't have pipx installed, try &lt;code&gt;sudo apt install pipx&lt;/code&gt; or &lt;code&gt;sudo dnf install pipx&lt;/code&gt;.  pipx is a great way to get python command line tools installed and available, without dealing directly with virtual envs and setting up paths.  If you don't have/want pipx, then I'll redirect you back to the pre-commit website to get that installed.&lt;/li&gt;
&lt;li&gt;In your repository, create a file called &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt;  and add 'projects' and 'hooks' for the issues and languages you want to check.  If I'm adding this to a repository with a bash script and a README.md file, then I'd create a file that looks like this:
``` repos:&lt;ul&gt;
&lt;li&gt;repo: https://github.com/shellcheck-py/shellcheck-py
    hooks:&lt;ul&gt;
&lt;li&gt;id: shellcheck&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;repo: https://github.com/pre-commit/pre-commit-hooks
    hooks:&lt;ul&gt;
&lt;li&gt;id: check-added-large-files&lt;/li&gt;
&lt;li&gt;id: check-case-conflict&lt;/li&gt;
&lt;li&gt;id: check-illegal-windows-names&lt;/li&gt;
&lt;li&gt;id: check-merge-conflict&lt;/li&gt;
&lt;li&gt;id: check-shebang-scripts-are-executable&lt;/li&gt;
&lt;li&gt;id: end-of-file-fixer&lt;/li&gt;
&lt;li&gt;id: trailing-whitespace&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;repo: https://github.com/thlorenz/doctoc
    hooks:&lt;ul&gt;
&lt;li&gt;id: doctoc
    args: ["--notitle"]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;3.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;some&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;That&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;packaget&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;when&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;don&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;have&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;edit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hook&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;
&lt;span class="mf"&gt;4.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;run&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;autoupdate&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;latest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;linting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;checking&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;to&lt;/span&gt;&lt;span class="n"&gt;ols&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;
&lt;span class="mf"&gt;5.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;To&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;existing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;on&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;

&lt;span class="n"&gt;From&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;whenever&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;checks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prevent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;finds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;issues&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;

&lt;span class="kr"&gt;For&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;

&lt;span class="err"&gt;```&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;
&lt;span class="err"&gt;»»»»&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;
&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;added&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;large&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="mf"&gt;..............................................&lt;/span&gt;&lt;span class="n"&gt;Passed&lt;/span&gt;
&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;conflicts&lt;/span&gt;&lt;span class="mf"&gt;.................................................&lt;/span&gt;&lt;span class="n"&gt;Passed&lt;/span&gt;
&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;illegal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;windows&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="mf"&gt;..........................&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;Skipped&lt;/span&gt;
&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;conflicts&lt;/span&gt;&lt;span class="mf"&gt;................................................&lt;/span&gt;&lt;span class="n"&gt;Passed&lt;/span&gt;
&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;shebangs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;are&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;executable&lt;/span&gt;&lt;span class="mf"&gt;..........................&lt;/span&gt;&lt;span class="n"&gt;Passed&lt;/span&gt;
&lt;span class="n"&gt;fix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="mf"&gt;.........................................................&lt;/span&gt;&lt;span class="n"&gt;Passed&lt;/span&gt;
&lt;span class="n"&gt;trim&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;trailing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;whitespace&lt;/span&gt;&lt;span class="mf"&gt;.................................................&lt;/span&gt;&lt;span class="n"&gt;Passed&lt;/span&gt;
&lt;span class="n"&gt;doctoc&lt;/span&gt;&lt;span class="mf"&gt;...................................................................&lt;/span&gt;&lt;span class="n"&gt;Passed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I didn't have to install anything else, just that yaml file, and it dealt with the rest.  Very slick.&lt;br&gt;
Go through the website for more info, checks you can implement, and to see what's available for your programming language or project.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://www.musixmatch.com/lyrics/Queen-40/we-are-the-champions-live-2#:~:text=And%20bad%20mistakes%2C%20I%27ve%20made%20a%20few"&gt;Cue Freddie&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Tech"></category><category term="pre-commit"></category><category term="python"></category><category term="git"></category></entry><entry><title>OMG G.O.A.T. Tracking!</title><link href="https://www.furicle.org/omg-tracking.html" rel="alternate"></link><published>2024-12-20T21:24:46-05:00</published><updated>2024-12-21T16:19:33-05:00</updated><author><name>furicle</name></author><id>tag:www.furicle.org,2024-12-20:/omg-tracking.html</id><summary type="html">&lt;p&gt;I've added tracking, it was easy, and it probably won't work&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I set this blog up, I deliberately didn't worry about analytics.  I thought it wasn't needed, and I appreciate a site that isn't calling out to a dozen different tracking sites.  &lt;/p&gt;
&lt;p&gt;After a couple days, I started wondering, has &lt;em&gt;anybody&lt;/em&gt; seen this site beside me?  How would I know?  &lt;/p&gt;
&lt;p&gt;It would be nice to have an idea if anything catches anybody's eye.  So I'm softing my hard line.  &lt;/p&gt;
&lt;p&gt;A quick shout out on Mastodon, and I got a great looking suggestion pretty quickly - &lt;a href="https://goatcounter.com"&gt;goat counter&lt;/a&gt;.&lt;br&gt;
Thanks &lt;a href="https://hacyderm.io/@esg"&gt;@esg&lt;/a&gt; !  &lt;/p&gt;
&lt;p&gt;I liked the emphasis on no tracking of personal data, and the open source nature.  The software and it's ideology is well explained there, I won't reproduce it here.  &lt;/p&gt;
&lt;p&gt;Installation was very straightforward, and consisted of two parts.&lt;br&gt;
Step one, I signed up at the goat counter site, using their service for now instead of self hosting.  I only provided a username and email address, and the website it was going to be installed on.  &lt;/p&gt;
&lt;p&gt;Step two, I added the simple &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag they provide to every page I want counted in my blog.  With this pelican installation, that meant I only had to add a single variable into my pelican publishing.yaml  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ANALYTICS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;&amp;lt;script data-goatcounter=&amp;quot;https://furicle.goatcounter.com/count&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;        async src=&amp;quot;//gc.zgo.at/count.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Interestingly, it did not work right away - but not because of a problem goat tracker.  I run uBlock Origin on pretty much all my browsers, and the 'Easy Privacy' blocking list, blocks goat counter by default.  I disabled it for me, and tested, and the tracking works great.  &lt;/p&gt;
&lt;p&gt;So, is this a problem?  I've decided no.  It's actually good that a common privacy tool like uBlock works correctly.  If you don't want to be tracked, you won't be, just by doing what you are already doing.  And if you aren't running an ad blocker, I'd strongly suggest that you do!  &lt;/p&gt;
&lt;p&gt;Will I end up with any logged visits on my website?  That remains to be seen.  Maybe Mom will drop by :-)&lt;/p&gt;
&lt;p&gt;If you'd like more info about using goat tracker, or have a question or comment, please, hit me up on Mastodon, and we can continue a conversation, or I can update this blog to be more helpful.&lt;/p&gt;</content><category term="Tech"></category><category term="pelican"></category><category term="publishing"></category><category term="goat counter"></category><category term="privacy"></category></entry><entry><title>A Powershell ffmpeg Snippet</title><link href="https://www.furicle.org/powershell-ffmpeg-snippet.html" rel="alternate"></link><published>2024-11-20T12:53:58-05:00</published><updated>2024-12-02T13:20:14-05:00</updated><author><name>furicle</name></author><id>tag:www.furicle.org,2024-11-20:/powershell-ffmpeg-snippet.html</id><summary type="html">&lt;p&gt;This is a short snippet to convert a bunch of mp4 movie files to webp format using ffmpeg.&lt;/p&gt;
&lt;p&gt;A little verbose perhaps, but I find it easy to remember and recreate, and it makes sense when you read it.&lt;/p&gt;
&lt;p&gt;Built in progress bar, and no worries about quoting or escaping …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is a short snippet to convert a bunch of mp4 movie files to webp format using ffmpeg.&lt;/p&gt;
&lt;p&gt;A little verbose perhaps, but I find it easy to remember and recreate, and it makes sense when you read it.&lt;/p&gt;
&lt;p&gt;Built in progress bar, and no worries about quoting or escaping stuff!  Take that !#bash&lt;/p&gt;
&lt;p&gt;Have something else that won't be finished in seconds?  Replace the &lt;code&gt;*mp4&lt;/code&gt; input, and the &lt;code&gt;ffmpeg&lt;/code&gt; line with whatever program/process you need.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# using the reasonable defaults, size down to 640x480, one pass, with a progress bar&lt;/span&gt;
&lt;span class="c"&gt;# for a whole folder of mp4s.  Reduction in file size is remarkable.&lt;/span&gt;

&lt;span class="nv"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;$fred&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;get-childitem&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt;&lt;span class="n"&gt;mp4&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$entry&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$fred&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;++&lt;/span&gt;
    &lt;span class="nv"&gt;$in&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
    &lt;span class="nv"&gt;$out&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.webm&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;$percentage&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$fred&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;&lt;span class="n"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;$activity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Converting {0} of {1} ...&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$fred&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;
    &lt;span class="nb"&gt;write-progress&lt;/span&gt; &lt;span class="n"&gt;-Activity&lt;/span&gt; &lt;span class="nv"&gt;$activity&lt;/span&gt; &lt;span class="n"&gt;-Status&lt;/span&gt; &lt;span class="nv"&gt;$in&lt;/span&gt; &lt;span class="n"&gt;-PercentComplete&lt;/span&gt; &lt;span class="nv"&gt;$percentage&lt;/span&gt;
    &lt;span class="n"&gt;ffmpeg&lt;/span&gt; &lt;span class="n"&gt;-hide_banner&lt;/span&gt; &lt;span class="n"&gt;-loglevel&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;  &lt;span class="n"&gt;-i&lt;/span&gt; &lt;span class="nv"&gt;$in&lt;/span&gt; &lt;span class="n"&gt;-vf&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;640&lt;/span&gt;&lt;span class="p"&gt;:-&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;$out&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Please note - &lt;code&gt;ffmpeg&lt;/code&gt; options aren't a rabbit hole, they're a Marianas Trench of infinite darkness and pressure.
Enter at your own risk...  Me, I'm happy in my floaty on the surface.&lt;/p&gt;</content><category term="Tech"></category><category term="ffmpeg"></category><category term="powershell"></category></entry><entry><title>A New Hope</title><link href="https://www.furicle.org/a-new-hope.html" rel="alternate"></link><published>2024-11-15T12:53:58-05:00</published><updated>2024-12-02T12:54:32-05:00</updated><author><name>furicle</name></author><id>tag:www.furicle.org,2024-11-15:/a-new-hope.html</id><summary type="html">&lt;p&gt;Stereotypical sysadmin does stereotypical bog thing again, stereotypically&lt;/p&gt;</summary><content type="html">&lt;p&gt;So I'm setting up a blog again.&lt;/p&gt;
&lt;p&gt;I've had one or two before, but never had enough output to bother keeping them up.&lt;/p&gt;
&lt;p&gt;It was the typical pattern of enthusiasim, a bunch of posting, then slowly the posts drift further and further apart until it's been a year... and you drop it.&lt;/p&gt;
&lt;p&gt;A while back I made a Jykell(?) site and hooked it up to git hub pages,  without really planning on using it, more so I could justify that yearly domain renewal bill :-)
It kinda worked, but I never liked the process, or the software.  I'm sure it's a me thing, not a Jykell thing, but it didn't gel.&lt;/p&gt;
&lt;p&gt;I've swapped from Twitter to Mastodon completely, and that was good enough for the little snippets I liked throwing out from time to time.&lt;/p&gt;
&lt;p&gt;But the other day I had a snark inspiration that was too long for a single masto post, and I didn't want to break it up.  I didn't find a good way to make it appear the way I wanted - without having a blog again.&lt;/p&gt;
&lt;p&gt;So here we go again I guess.&lt;/p&gt;
&lt;p&gt;My first thought was &lt;a href="https://github.com/gyptazy/manpageblog"&gt;manpageblog&lt;/a&gt;.  It looked very simple and straight forward, just what I was after.
But after poking a bit, I found&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;broken links on the README page&lt;/li&gt;
&lt;li&gt;a demo site that was down&lt;/li&gt;
&lt;li&gt;instructions that were incomplete&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I imagine I could get it to work, but the vibes weren't great.&lt;/p&gt;
&lt;p&gt;So throwing another dart at the board, let's try &lt;a href="https://getpelican.com"&gt;Pelican&lt;/a&gt;.
AGPL, lots of activity on the repository, output looks pretty simple, made with a programming language I have scripted in, and extensive docs.&lt;/p&gt;
&lt;p&gt;There's a quickstart, that actually recommends reading the full docs,  and full docs that tell you to start with the quick start :-)&lt;/p&gt;
&lt;p&gt;So I read thru the quickstart, then moved to the skipping around in the full docs before I did anything.&lt;/p&gt;
&lt;p&gt;The docs seem to be &lt;em&gt;good&lt;/em&gt; so far, with things spelled out clearly, but there's some odd choices like the back and forth above around the quickstart.&lt;/p&gt;
&lt;p&gt;Take for instance the &lt;a href="https://docs.getpelican.com/en/stable/install.html#"&gt;Installing&lt;/a&gt; section - there's five paragraphs of how to install, followed by
"While the above is the simplest method, the recommended approach is to create a virtual environment for Pelican via virtualenv before installing Pelican."
To their credit, they go on to explain how to do that, but why wait for six paragraphs to mention the 'recommended' way?&lt;/p&gt;
&lt;p&gt;And then I hit "Typographical enhancements can be enabled in your settings file, but first the requisite Typogrify library must be installed:"&lt;/p&gt;
&lt;p&gt;I dunno, maybe I'm not the typical user, but what the heck exactly are the "typographical enhancements?"    Five cylinder words without any explanation is never a good thing, in my opinion.&lt;/p&gt;
&lt;p&gt;None the less I've persevered (read, spent five to ten minutes a couple times when I had a minute to poke at it) and got something working.&lt;/p&gt;
&lt;p&gt;I'm not sure I'll publish more info on the how and what, since I was hardly organized about  it.&lt;/p&gt;
&lt;p&gt;If that's something you do want to see, hit me up on Mastodon to write it down.&lt;/p&gt;
&lt;p&gt;As for content going forward, I'm planning on having no plan.   Right now I've got some rough thoughts that fall into either techy sysadmin stuff,  or musings from a middle aged parent and partner, or snark.&lt;br&gt;
If I dump the snark here, maybe I'll expose the people around me to it a little less.&lt;/p&gt;
&lt;p&gt;I will provide this blog over rss, and try to tag things fairly well.  That way you can either subscribe to tech, snark, or the whole random static experience etc.&lt;/p&gt;
&lt;p&gt;Stay tuned as I flesh it out.  Or don't, and have a nice day.&lt;/p&gt;</content><category term="Tech"></category><category term="pelican"></category><category term="publishing"></category><category term="python"></category></entry></feed>